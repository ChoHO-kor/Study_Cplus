#include <stdio.h>
#include <stdlib.h>
#include <string.h>

//call by value
//call by reference [C언어는 지원안함)
void adder(int a)
{
	a = a + 3;
	printf("%d\n", a);
}

void adder(int* pa)
{
	*pa = *pa + 3;
	printf("%d\n", *pa);
}

int main()
{

	/*char c[2];
	c[0] = 'A';
	c[1] = 'B';
	printf("%c\n", c[0]);*/
//----------------------------------------------------------------------------
	/*int a = 3;
	adder(&a);*/
//----------------------------------------------------------------------------
	/*char c[10];
	scanf("%s", c);
	printf("%s", c);

	for (int i = 0; i < 10; i++)
	{
		if (c[i] == 0)
		{
			printf("\nbreak i : %d", i);
			break;
		}
	}*/
//------------------------------------------------------------------------------
	//char b[6] = {"hello"}; // -> 'h','o','l','l','o','\0'
	//printf("\n%c", b[4]);
	//printf("\n%s", b);
//----------------------------------------------------------------------------
	//dynamic
	char* c;
	char* name;
	char* Message;

	c = (char*)malloc(10 * sizeof(char));
	name = (char*)malloc(10*sizeof(char));
	c[0] = 'H';
	c[1] = 'e';
	c[2] = 'l';
	c[3] = 'l';
	c[4] = 'o';
	c[5] = '\0';

	Message = (char*)malloc(100 * sizeof(char));
	/*for (int i = 0; i < 100; i++)
	{
		
	}*/
	memset((void*)Message,0,100);

	name[0] = 'W';
	name[1] = 'o';
	name[2] = 'r';
	name[3] = 'l';
	name[4] = 'd';
	name[5] = '\0';

	//strcat(Message, c);
	//strcat(Message, name);
	strcmp(Message, name);
	sprintf(Message, "%s %s %d", c, name, 12345);
	printf("%s\n", Message);

	free(name);
	//free했으면 꼭 비워주자
	name = nullptr;
	free(Message);
	//free했으면 꼭 비워주자
	Message = nullptr;
	
	if (name!=0)
	{
		printf("%s", name);
	}

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
	return 0;
}